package ru.mai.javacourses.lecture1;

/*
Рассмотрим примитивные типы данных в Java. Далее тип(в скобках минимальное;максимальное значения)
int - целые(-2147483648;2147483647)
short - короткие целые(-32768;32767)
long - длинные целые(-9223372036854775808;9223372036854775807)
byte - байтовые(-128;127)

Числовые типы с плавающей точкой: double(64-бит) float(32-бит)
Логический тип boolean - принимает 2 значения(true или false)
И тип char - символьный тип

 */
public class Sample2 {
    public static void main(String[] args) {
        //Java строго типизирован. Это значит что при объявлении переменных, надо явно указывать тип
        //Область видимости этой переменной - фигурные скобки{}
        //Объявление переменной типа int(целые)
        int number;
        //System.out.println(number); если сейчас попытаться вывести number, будет ошибка
        number = 10; // Оператор присваивания. Первое присваивание значения переменной называется инициализацией.
        System.out.println("Значение переменной number " + number); //Инициализировав переменную мы можем вывести её. Выведет 10
        number = 100;
        System.out.println("Теперь значение переменной number " + number);

        int number2 = 15;
        System.out.println("Новая переменная number2 равна " + number2);

        number = 10 * 235 - 567;
        number = 10 - number; //Справа-налево. Сначала вычисляется значение, потом присваивается переменной number
        System.out.println("Переменная number после пары операций над ней стала равна " + number);

        number = 56 / 10;
        System.out.println("56/10 вывело значение " + number);//выведет 5, а не 5.6, потому что тип int - целый. Дробная часть отсекается.
        // % - оператор mod. В результате получаем остаток от деления.
        number = 56 % 10;
        System.out.println("56 % 10 будет равно " + number);//Выведет число 6 - остаток от деления

        double price = 56 / 10;//переменная price типа double, но результат всё равно будет 5, а не 5.6. ПОЧЕМУ?
        System.out.println("Результат 56/10 в переменную price типа double без приведения типов " + price);
        /*
        Оператор деления не знает какой результат мы хотим получить
        Поэтому он будет выполнять целочисленное деление
         */

        price = 56.0 / 10; //Здесь уже вывдет 5.6;  Мы задали первое число как дробное и оператор нас поймет
        System.out.println("Результат деления 56.0 / 10 равен " + price);

        //А что если вот так?
        number = 56;
        number2 = 10;
        price = (double) number / number2; // Тогда мы явно указывает тип, т.е делаем приведение типа к double.
        System.out.println("Значение price после приведения типа к double " + price); // Выведет 5.6




        //Продолжение в следующем классе(Sample3)

    }
}
